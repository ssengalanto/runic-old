// Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/account/{id}": {
            "get": {
                "description": "Retrieves the account details for a specific account ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account"
                ],
                "summary": "Get Account Details",
                "parameters": [
                    {
                        "type": "string",
                        "example": "\"0b6ecded-fa9d-4b39-a309-9ef501de15f4\"",
                        "description": "Account ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the account details.",
                        "schema": {
                            "$ref": "#/definitions/AccountUserResponse"
                        }
                    },
                    "404": {
                        "description": "The specified record does not exist.",
                        "schema": {
                            "$ref": "#/definitions/HTTPError"
                        }
                    },
                    "500": {
                        "description": "An error occurred while processing the request.",
                        "schema": {
                            "$ref": "#/definitions/HTTPError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "AccountUserProfileResponse": {
            "type": "object",
            "properties": {
                "avatar": {
                    "type": "string",
                    "example": "https://avatar.com"
                },
                "bio": {
                    "type": "string",
                    "example": "Hi, I'm John Doe."
                },
                "dateOfBirth": {
                    "type": "string",
                    "example": "2000-11-12T13:14:15Z"
                },
                "firstName": {
                    "type": "string",
                    "example": "John"
                },
                "id": {
                    "type": "string",
                    "example": "0b6ecded-fa9d-4b39-a309-9ef501de15f4"
                },
                "lastName": {
                    "type": "string",
                    "example": "Doe"
                },
                "userId": {
                    "type": "string",
                    "example": "0b6ecded-fa9d-4b39-a309-9ef501de15f4"
                }
            }
        },
        "AccountUserResponse": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean",
                    "example": true
                },
                "email": {
                    "type": "string",
                    "example": "johndoe@example.com"
                },
                "id": {
                    "type": "string",
                    "example": "0b6ecded-fa9d-4b39-a309-9ef501de15f4"
                },
                "lastLoginAt": {
                    "type": "string",
                    "example": "2000-11-12T13:14:15Z"
                },
                "profile": {
                    "$ref": "#/definitions/AccountUserProfileResponse"
                },
                "role": {
                    "type": "string",
                    "example": "admin"
                }
            }
        },
        "Error": {
            "type": "object",
            "properties": {
                "cause": {
                    "type": "string"
                },
                "code": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "HTTPError": {
            "type": "object",
            "properties": {
                "error": {
                    "$ref": "#/definitions/Error"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
